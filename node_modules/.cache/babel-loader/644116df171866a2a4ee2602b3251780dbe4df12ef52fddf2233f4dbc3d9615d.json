{"ast":null,"code":"var _jsxFileName = \"/Users/jaypalaganas/Desktop/STUDY_FILES/4th year, Sem2/R&D2/RRSRM-tool/src/components/Suggestions.js\";\nimport React from 'react';\nimport styles from './Suggestions.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Suggestions = ({\n  suggestions,\n  isLoading\n}) => {\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.suggestionsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.loader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.fetchingText,\n        children: \"Looking for suggestions...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  }\n  if (!suggestions) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.suggestionsContainer,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.noSuggestions,\n        children: \"No suggestions available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.suggestionsContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.suggestionsTitle,\n      children: \"Improvement Suggestions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.suggestionList,\n      children: suggestions.length > 0 ? suggestions.split('\\n').map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.suggestionItem,\n        children: suggestion\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.noSuggestions,\n        children: \"No suggestions found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = Suggestions;\nexport default Suggestions;\nvar _c;\n$RefreshReg$(_c, \"Suggestions\");","map":{"version":3,"names":["React","styles","jsxDEV","_jsxDEV","Suggestions","suggestions","isLoading","className","suggestionsContainer","children","loader","fileName","_jsxFileName","lineNumber","columnNumber","fetchingText","noSuggestions","suggestionsTitle","suggestionList","length","split","map","suggestion","index","suggestionItem","_c","$RefreshReg$"],"sources":["/Users/jaypalaganas/Desktop/STUDY_FILES/4th year, Sem2/R&D2/RRSRM-tool/src/components/Suggestions.js"],"sourcesContent":["import React from 'react';\nimport styles from './Suggestions.module.css';\n\nconst Suggestions = ({ suggestions, isLoading }) => {\n  if (isLoading) {\n    return (\n      <div className={styles.suggestionsContainer}>\n        <div className={styles.loader}></div>\n        <p className={styles.fetchingText}>Looking for suggestions...</p>\n      </div>\n    );\n  }\n\n  if (!suggestions) {\n    return (\n      <div className={styles.suggestionsContainer}>\n        <p className={styles.noSuggestions}>No suggestions available.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.suggestionsContainer}>\n      <h2 className={styles.suggestionsTitle}>Improvement Suggestions</h2>\n      <div className={styles.suggestionList}>\n        {suggestions.length > 0 ? (\n          suggestions.split('\\n').map((suggestion, index) => (\n            <div key={index} className={styles.suggestionItem}>\n              {suggestion}\n            </div>\n          ))\n        ) : (\n          <p className={styles.noSuggestions}>No suggestions found.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Suggestions;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAU,CAAC,KAAK;EAClD,IAAIA,SAAS,EAAE;IACb,oBACEH,OAAA;MAAKI,SAAS,EAAEN,MAAM,CAACO,oBAAqB;MAAAC,QAAA,gBAC1CN,OAAA;QAAKI,SAAS,EAAEN,MAAM,CAACS;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACrCX,OAAA;QAAGI,SAAS,EAAEN,MAAM,CAACc,YAAa;QAAAN,QAAA,EAAC;MAA0B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC;EAEV;EAEA,IAAI,CAACT,WAAW,EAAE;IAChB,oBACEF,OAAA;MAAKI,SAAS,EAAEN,MAAM,CAACO,oBAAqB;MAAAC,QAAA,eAC1CN,OAAA;QAAGI,SAAS,EAAEN,MAAM,CAACe,aAAc;QAAAP,QAAA,EAAC;MAAyB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC;EAEV;EAEA,oBACEX,OAAA;IAAKI,SAAS,EAAEN,MAAM,CAACO,oBAAqB;IAAAC,QAAA,gBAC1CN,OAAA;MAAII,SAAS,EAAEN,MAAM,CAACgB,gBAAiB;MAAAR,QAAA,EAAC;IAAuB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpEX,OAAA;MAAKI,SAAS,EAAEN,MAAM,CAACiB,cAAe;MAAAT,QAAA,EACnCJ,WAAW,CAACc,MAAM,GAAG,CAAC,GACrBd,WAAW,CAACe,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,kBAC5CpB,OAAA;QAAiBI,SAAS,EAAEN,MAAM,CAACuB,cAAe;QAAAf,QAAA,EAC/Ca;MAAU,GADHC,KAAK;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN,CAAC,gBAEFX,OAAA;QAAGI,SAAS,EAAEN,MAAM,CAACe,aAAc;QAAAP,QAAA,EAAC;MAAqB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC7D;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACW,EAAA,GAlCIrB,WAAW;AAoCjB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}