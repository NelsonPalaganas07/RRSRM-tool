{"ast":null,"code":"var _jsxFileName = \"/Users/jaypalaganas/Desktop/STUDY_FILES/4th year, Sem2/R&D2/RRSRM-tool/src/components/Result.js\";\nimport React, { useState } from 'react';\nimport ResultCSS from './Result.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Result = ({\n  prediction\n}) => {\n  const getResult = () => {\n    if (prediction === 1) {\n      return 'Unambiguous';\n    } else if (prediction === 0) {\n      return 'Ambiguous';\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: prediction === 1 ? ResultCSS.h2succ : ResultCSS.h2fail,\n      children: getResult()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: ResultCSS.card,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Definition:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 20\n        }, this), \" User stories should be clear and avoid misunderstandings, both within themselves and compared to other stories. In terms of semantics, a sentence could mean many things which could result in different tasks being worked on.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_c = Result;\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","useState","ResultCSS","jsxDEV","_jsxDEV","Result","prediction","getResult","children","className","h2succ","h2fail","fileName","_jsxFileName","lineNumber","columnNumber","card","_c","$RefreshReg$"],"sources":["/Users/jaypalaganas/Desktop/STUDY_FILES/4th year, Sem2/R&D2/RRSRM-tool/src/components/Result.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ResultCSS from './Result.module.css';\n\nconst Result = ({prediction}) => {\n    const getResult = () => {\n        if (prediction === 1) {\n            return 'Unambiguous';\n        } else if (prediction === 0){\n            return 'Ambiguous';\n        }\n        return null;\n    };\n\n    return (\n        <div>\n            <h2 className={prediction === 1 ? ResultCSS.h2succ : ResultCSS.h2fail}>\n                {getResult()}\n            </h2>\n            \n            <div className={ResultCSS.card}>\n                <p><strong>Definition:</strong> User stories should be clear and avoid misunderstandings, both within themselves and compared to other stories.\n                In terms of semantics, a sentence could mean many things which could result in different tasks being worked on.\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default Result;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,MAAM,GAAGA,CAAC;EAACC;AAAU,CAAC,KAAK;EAC7B,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACpB,IAAID,UAAU,KAAK,CAAC,EAAE;MAClB,OAAO,aAAa;IACxB,CAAC,MAAM,IAAIA,UAAU,KAAK,CAAC,EAAC;MACxB,OAAO,WAAW;IACtB;IACA,OAAO,IAAI;EACf,CAAC;EAED,oBACIF,OAAA;IAAAI,QAAA,gBACIJ,OAAA;MAAIK,SAAS,EAAEH,UAAU,KAAK,CAAC,GAAGJ,SAAS,CAACQ,MAAM,GAAGR,SAAS,CAACS,MAAO;MAAAH,QAAA,EACjED,SAAS,CAAC;IAAC;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eAELX,OAAA;MAAKK,SAAS,EAAEP,SAAS,CAACc,IAAK;MAAAR,QAAA,eAC3BJ,OAAA;QAAAI,QAAA,gBAAGJ,OAAA;UAAAI,QAAA,EAAQ;QAAW;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,oOAE/B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACE,EAAA,GAvBIZ,MAAM;AAyBZ,eAAeA,MAAM;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}